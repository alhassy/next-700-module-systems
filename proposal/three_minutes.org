#+TITLE: Have you ever packaged anything?
#+DATE: 2019-03-13
#+AUTHOR: Musa Al-hassy
#+EMAIL: alhassy@gmail.com
#+OPTIONS: html-postamble:nil toc:nil d:nil
#+LATEX_HEADER: \usepackage[margin=0.5in]{geometry}
#+fileimage: packages.png 250 250
#+filetags: packages dependent-types

# What does it mean to package things together?
#
# Use “block” to remove [needless] distinctions between different sub-parts.

# 120 words ~ 1 minute   ⇒   360 words total
# Hero of story = package

* Abstract                                                   :ignore:

Herein I try to make my current doctoral research accessible to the average person:
Extending dependently-typed languages to implement module system features in the core
language. It's something I can direct my family to, if they're inclined to know what it is
I've been doing lately.

The technical matter can be seen at the associated website
─[[https://alhassy.github.io/next-700-module-systems-proposal/][The Next 700 Module Systems]]─ which includes a poster, slides, and a demo.

Excluding the abstract, this is my thesis proposal in /three minutes/ (•̀ᴗ•́)و

* Photograph Credit                                                  :ignore:
#+LaTeX: \iffalse
#+HTML: <small> <center>
( Photo by
[[https://unsplash.com/@vtrsnts][Vitor Santos]]
on [[https://unsplash.com/][Unsplash]] )
#+HTML: </center> </small>
#+LaTeX: \fi

* Part I ─Getting the mail
+ Have you ever been confused by packages?

+ There are so many parts when it comes to packaging:
  0. There's the stamps,
  1. the addresses,
  2. the contents,
  3. the damage insurance,
  4. the package weight,
  5. customs declarations!

  There's so many parts!

+ Look at them! ⟪ gesture to screen ⟫
  - There's so many! The place is a mess!
  - This could be you parents' basement!
  - It could be your work desk!
  - In computing, this is your code! Mish-mashed from smaller pieces!
  - Eek!

+ Unlike the day-to-day mail we receive, in computing, packages take the form of modules
  and each of these separate, yet crucial, aspect of packaging corresponds to a different
  /language/! ⟪Pause⟫

+ Think about it: On average, a ‘coding language’ actually consists of at least 4 different
  languages! That's like if your package in the mail had
  + a stamp in English,
  + an address in Spanish,
  + contents in Latin,
  + the insurance policy in German,
  + package weight in Gaelic.

  What a headache!

+ You shouldn't have to go to college to understand how your mail works!

  :Ignore:
  In computing, these are
  + An expression language,
  + A type language,
  + A specification or assertion language,
  + A proof language,
  + and a module language.
  :End:

* Part II ─Building blocks

+ Just as a clingy boyfriend, or a puppy that follows you around, is called a ‘dependent type’
  we have those in computing too and they're essentially the same thing!

  - Software that uses dependent types lets us treat the different pieces
    as if they were the same --except packages, they still live in their own language.

+ Packages are a building block of computing, like Lego(!):
  You can build better, compact,
  software using pre-built blocks. ⟪ Gesture hands together. ⟫

+ Since computing is so young as a science,
  we don't really know how pieces should be glued together.

  # maybe remove this, if need to reduce text.
  - You'd think otherwise since you have a brick in your pocket
    that can access all knowledge of humanity.

+ For the most part, we cope by ad hoc methods -- “it works good enough”.

  - Unfortunately this does not scale!
  - ⟪wave at slide⟫ package maintenance can get out of hand
    rather quickly for any large piece of software!

* Part III ─Arithmetic

+ Just as the clingy boyfriend and the puppy dog that follows you around can be seen as just
  more family; with dependent types, packages too can be treated as just normal blocks.

+ I'm researching the arithmetic of packages
  to help software developers manage large projects and reduce complexity & maintenance costs.

  My research suggests that packaging can be treated in the same way we
  treat numbers.

  - We can combine numbers by adding them, likewise we can combine packages by
    putting their pieces together in a new package!

  - In grade school, “2 + 3 and 3 + 2 are both 5”,
    yet with packages “2 + 3 might be 5, but 3 + 2 might not even exist!”

So next time you send a package, think of what it means to me and how many
languages are involved!

# ⟪ End with the same idea as your started with. ⟫

# 3 rs: reading, riting, rithmetic

* COMMENT More ideas

+ Just as engineers tie their domains together using mathematics and have gears to build things,
  what are the building blocks of computing?

+ Computing is growing so rapidly yet we have yet to determine the primitive
   building blocks and methods witch which to glue pieces together.

* COMMENT @@latex:\centerline{\LARGE{ What is a package? }}@@

#+startup: beamer
#+LaTeX_CLASS: beamer
# LaTeX_CLASS_OPTIONS: [bigger]
#+LaTeX_CLASS_OPTIONS: [aspectratio=169]

[[file:packages_many.jpg]]

#+begin_export latex
\vfill
\centerline{Musa Al-hassy}
\centerline{\emph{Computing \& Software}}
#+end_export

* COMMENT footer

# Local Variables:
# eval: (visual-line-mode t)
# compile-command: (my-org-html-export-to-html)
# End:
